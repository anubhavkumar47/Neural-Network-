{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOTt4iAjdwFUWInY0ijda8X",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/anubhavkumar47/Neural-Network-/blob/main/Secure-Data-Collection-in-UAV-Assisted-IoT-via-Diffusion-Model-Enabled-Deep-Reinforcement-Learning\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FdpG-UJg6-V7",
        "outputId": "c00f9082-3138-484b-8375-dd236cce390c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cloning into 'Secure-Data-Collection-in-UAV-Assisted-IoT-via-Diffusion-Model-Enabled-Deep-Reinforcement-Learning'...\n",
            "remote: Enumerating objects: 116, done.\u001b[K\n",
            "remote: Counting objects: 100% (116/116), done.\u001b[K\n",
            "remote: Compressing objects: 100% (113/113), done.\u001b[K\n",
            "remote: Total 116 (delta 55), reused 0 (delta 0), pack-reused 0 (from 0)\u001b[K\n",
            "Receiving objects: 100% (116/116), 1.25 MiB | 3.36 MiB/s, done.\n",
            "Resolving deltas: 100% (55/55), done.\n"
          ]
        }
      ],
      "source": [
        "!git clone https://github.com/YasirWaseem/Secure-Data-Collection-in-UAV-Assisted-IoT-via-Diffusion-Model-Enabled-Deep-Reinforcement-Learning.git\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%cd /content/Secure-Data-Collection-in-UAV-Assisted-IoT-via-Diffusion-Model-Enabled-Deep-Reinforcement-Learning\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0jfb249i9HBw",
        "outputId": "c14b144c-07f1-4388-f949-8aea82a4c7ac"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/Secure-Data-Collection-in-UAV-Assisted-IoT-via-Diffusion-Model-Enabled-Deep-Reinforcement-Learning\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!ls\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sXqNNyBR9I6V",
        "outputId": "4dbc3b65-aa65-4867-d975-3d4860208b0c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "diffusion.py  llm_reward.py  model.py\tUAV.py\t  utils.py\n",
            "figures       mainDM3.py     policy.py\tutil1.py\n",
            "helpers.py    memory.py      README.md\tutil.py\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install -r requirements.txt\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FLGRC9T99NgC",
        "outputId": "bf3cb80b-9a01-4c3d-ca82-18c58dadd48c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[31mERROR: Could not open requirements file: [Errno 2] No such file or directory: 'requirements.txt'\u001b[0m\u001b[31m\n",
            "\u001b[0m"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install tensorboardX seaborn\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Iypm9hQU9gbX",
        "outputId": "05cb214b-c3a9-4878-bf39-8f3295ca70fb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting tensorboardX\n",
            "  Downloading tensorboardX-2.6.2.2-py2.py3-none-any.whl.metadata (5.8 kB)\n",
            "Requirement already satisfied: seaborn in /usr/local/lib/python3.11/dist-packages (0.13.2)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from tensorboardX) (2.0.2)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from tensorboardX) (24.2)\n",
            "Requirement already satisfied: protobuf>=3.20 in /usr/local/lib/python3.11/dist-packages (from tensorboardX) (5.29.4)\n",
            "Requirement already satisfied: pandas>=1.2 in /usr/local/lib/python3.11/dist-packages (from seaborn) (2.2.2)\n",
            "Requirement already satisfied: matplotlib!=3.6.1,>=3.4 in /usr/local/lib/python3.11/dist-packages (from seaborn) (3.10.0)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (1.3.2)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (4.57.0)\n",
            "Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (1.4.8)\n",
            "Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (11.2.1)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (3.2.3)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (2.9.0.post0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.2->seaborn) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.2->seaborn) (2025.2)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7->matplotlib!=3.6.1,>=3.4->seaborn) (1.17.0)\n",
            "Downloading tensorboardX-2.6.2.2-py2.py3-none-any.whl (101 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m101.7/101.7 kB\u001b[0m \u001b[31m3.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: tensorboardX\n",
            "Successfully installed tensorboardX-2.6.2.2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!python mainDM3.py\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vw2v38f79ToH",
        "outputId": "e245ab50-75e4-4245-b21d-859a3c61463e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/gym/spaces/box.py:128: UserWarning: \u001b[33mWARN: Box bound precision lowered by casting to float32\u001b[0m\n",
            "  logger.warn(f\"Box bound precision lowered by casting to {self.dtype}\")\n",
            "/usr/local/lib/python3.11/dist-packages/jupyter_client/connect.py:28: DeprecationWarning: Jupyter is migrating its paths to use standard platformdirs\n",
            "given by the platformdirs library.  To remove this warning and\n",
            "see the appropriate new directories, set the environment variable\n",
            "`JUPYTER_PLATFORM_DIRS=1` and then run `jupyter --paths`.\n",
            "The use of platformdirs will be the default in `jupyter_core` v6\n",
            "  from jupyter_core.paths import jupyter_data_dir, jupyter_runtime_dir, secure_write\n",
            "2025-05-03 11:53:42.643000: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
            "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
            "E0000 00:00:1746273222.683108    4961 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
            "E0000 00:00:1746273222.699682    4961 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
            "2025-05-03 11:53:42.772331: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.\n",
            "To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.\n",
            "/usr/local/lib/python3.11/dist-packages/gym/spaces/box.py:128: UserWarning: \u001b[33mWARN: Box bound precision lowered by casting to float32\u001b[0m\n",
            "  logger.warn(f\"Box bound precision lowered by casting to {self.dtype}\")\n",
            "/usr/local/lib/python3.11/dist-packages/torch/nn/modules/transformer.py:385: UserWarning: enable_nested_tensor is True, but self.use_nested_tensor is False because encoder_layer.self_attn.batch_first was not True(use batch_first for better inference performance)\n",
            "  warnings.warn(\n",
            "Action dim: 9\n",
            "/content/Secure-Data-Collection-in-UAV-Assisted-IoT-via-Diffusion-Model-Enabled-Deep-Reinforcement-Learning/diffusion.py:77: DeprecationWarning: __array_wrap__ must accept context and return_scalar arguments (positionally) in the future. (Deprecated NumPy 2.0)\n",
            "  betas * np.sqrt(alphas_cumprod_prev) / (1. - alphas_cumprod)) # Eq.10 Right\n",
            "You are using the default legacy behaviour of the <class 'transformers.models.t5.tokenization_t5.T5Tokenizer'>. This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thoroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565\n",
            "Device set to use cpu\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [  0. 299.   0.]\n",
            "- UAV B position (jammer): [299. 299. 200.]\n",
            "- AoI values (for 5 IoTDs): [0. 0. 0. 0. 0.]\n",
            "- Energy used by UAV A: 0.0\n",
            "- Energy used by UAV B: 0.0\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [ 0.98165917 -0.21120043]\n",
            "- UAV B movement: [0.30169044 0.96182639]\n",
            "- IoTD targeted: #4 (AoI: 0.0)\n",
            "\n",
            "Base reward from environment: -99\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -89.10000000000001\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [ 19. 294.   0.]\n",
            "- UAV B position (jammer): [299. 299. 200.]\n",
            "- AoI values (for 5 IoTDs): [1. 1. 1. 1. 1.]\n",
            "- Energy used by UAV A: 500.0\n",
            "- Energy used by UAV B: 500.0\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [-0.98585999  0.60906884]\n",
            "- UAV B movement: [ 0.48650075 -0.79832875]\n",
            "- IoTD targeted: #0 (AoI: 1.0)\n",
            "\n",
            "Base reward from environment: -99\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -89.10000000000001\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [  0. 299.   0.]\n",
            "- UAV B position (jammer): [299. 283. 200.]\n",
            "- AoI values (for 5 IoTDs): [2. 2. 2. 2. 2.]\n",
            "- Energy used by UAV A: 500.0\n",
            "- Energy used by UAV B: 500.0\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [-0.44144677  0.2297906 ]\n",
            "- UAV B movement: [-0.31254424  0.98603174]\n",
            "- IoTD targeted: #4 (AoI: 2.0)\n",
            "\n",
            "Base reward from environment: -99\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -89.10000000000001\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [  0. 299.   0.]\n",
            "- UAV B position (jammer): [292. 299. 200.]\n",
            "- AoI values (for 5 IoTDs): [3. 3. 3. 3. 3.]\n",
            "- Energy used by UAV A: 500.0\n",
            "- Energy used by UAV B: 500.0\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [-0.98914219 -0.6023397 ]\n",
            "- UAV B movement: [0.40214976 0.78502392]\n",
            "- IoTD targeted: #1 (AoI: 3.0)\n",
            "\n",
            "Base reward from environment: -99\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -89.10000000000001\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [  0. 286.   0.]\n",
            "- UAV B position (jammer): [299. 299. 200.]\n",
            "- AoI values (for 5 IoTDs): [4. 4. 4. 4. 4.]\n",
            "- Energy used by UAV A: 500.0\n",
            "- Energy used by UAV B: 500.0\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [-0.66087652  0.79593267]\n",
            "- UAV B movement: [0.74567081 0.31609884]\n",
            "- IoTD targeted: #4 (AoI: 4.0)\n",
            "\n",
            "Base reward from environment: -99\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -89.10000000000001\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [  0. 299.   0.]\n",
            "- UAV B position (jammer): [299. 299. 200.]\n",
            "- AoI values (for 5 IoTDs): [5. 5. 5. 5. 5.]\n",
            "- Energy used by UAV A: 500.0\n",
            "- Energy used by UAV B: 500.0\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [-0.54238443  0.49594344]\n",
            "- UAV B movement: [-0.775662   -0.13334137]\n",
            "- IoTD targeted: #0 (AoI: 5.0)\n",
            "\n",
            "Base reward from environment: -99\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -89.10000000000001\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [  0. 299.   0.]\n",
            "- UAV B position (jammer): [283. 296. 200.]\n",
            "- AoI values (for 5 IoTDs): [6. 6. 6. 6. 6.]\n",
            "- Energy used by UAV A: 500.0\n",
            "- Energy used by UAV B: 500.0\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [-0.13968577 -0.29559577]\n",
            "- UAV B movement: [0.11712887 0.61629223]\n",
            "- IoTD targeted: #4 (AoI: 6.0)\n",
            "\n",
            "Base reward from environment: -99\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -89.10000000000001\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [  0. 293.   0.]\n",
            "- UAV B position (jammer): [285. 299. 200.]\n",
            "- AoI values (for 5 IoTDs): [7. 7. 7. 7. 7.]\n",
            "- Energy used by UAV A: 500.0\n",
            "- Energy used by UAV B: 500.0\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [-0.38703751 -0.2818574 ]\n",
            "- UAV B movement: [-0.97515393 -0.91609615]\n",
            "- IoTD targeted: #1 (AoI: 7.0)\n",
            "\n",
            "Base reward from environment: -99\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -89.10000000000001\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [  0. 287.   0.]\n",
            "- UAV B position (jammer): [265. 280. 200.]\n",
            "- AoI values (for 5 IoTDs): [8. 8. 8. 8. 8.]\n",
            "- Energy used by UAV A: 500.0\n",
            "- Energy used by UAV B: 500.0\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [-0.34957312  0.26724706]\n",
            "- UAV B movement: [-0.68050821  0.90637835]\n",
            "- IoTD targeted: #0 (AoI: 8.0)\n",
            "\n",
            "Base reward from environment: -99\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -89.10000000000001\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [  0. 292.   0.]\n",
            "- UAV B position (jammer): [251. 298. 200.]\n",
            "- AoI values (for 5 IoTDs): [9. 9. 9. 9. 9.]\n",
            "- Energy used by UAV A: 500.0\n",
            "- Energy used by UAV B: 500.0\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [-0.61342814  0.04012593]\n",
            "- UAV B movement: [-0.71236596 -0.27839785]\n",
            "- IoTD targeted: #3 (AoI: 9.0)\n",
            "\n",
            "Base reward from environment: -99\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -89.10000000000001\n",
            "/content/Secure-Data-Collection-in-UAV-Assisted-IoT-via-Diffusion-Model-Enabled-Deep-Reinforcement-Learning/UAV.py:159: ComplexWarning: Casting complex values to real discards the imaginary part\n",
            "  H_UAV_IoTD[i] = (np.sqrt(0.001 / (Distance_UAV_IoTD[i] ** 2))\n",
            "/content/Secure-Data-Collection-in-UAV-Assisted-IoT-via-Diffusion-Model-Enabled-Deep-Reinforcement-Learning/UAV.py:166: ComplexWarning: Casting complex values to real discards the imaginary part\n",
            "  H_IoTD_e[i][j] = (np.sqrt(0.001 / (Distance_IoTD_e[i][j] ** 2))\n",
            "/content/Secure-Data-Collection-in-UAV-Assisted-IoT-via-Diffusion-Model-Enabled-Deep-Reinforcement-Learning/UAV.py:177: ComplexWarning: Casting complex values to real discards the imaginary part\n",
            "  H_Jammer_e[i] = (np.sqrt(0.001 / (Distance_Jammer_e[i] ** 2))\n",
            "/content/Secure-Data-Collection-in-UAV-Assisted-IoT-via-Diffusion-Model-Enabled-Deep-Reinforcement-Learning/UAV.py:187: ComplexWarning: Casting complex values to real discards the imaginary part\n",
            "  R_D[i] = np.log2(1 + 0.01 * (H_UAV_IoTD[i] ** 2) / (1e-13 + 0.001 * (H_UAV_Jammer ** 2)))\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [  0. 292.   0.]\n",
            "- UAV B position (jammer): [236. 292. 200.]\n",
            "- AoI values (for 5 IoTDs): [10. 10. 10. 10. 10.]\n",
            "- Energy used by UAV A: 500.0\n",
            "- Energy used by UAV B: 500.0\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [ 0.0447082  -0.98673343]\n",
            "- UAV B movement: [0.89067342 0.13464059]\n",
            "- IoTD targeted: #1 (AoI: 10.0)\n",
            "\n",
            "Base reward from environment: -119.6332866548004\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -107.66995798932037\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [  0. 272.   0.]\n",
            "- UAV B position (jammer): [253. 294. 200.]\n",
            "- AoI values (for 5 IoTDs): [11.  1. 11. 11. 11.]\n",
            "- Energy used by UAV A: 1252.9984130859375\n",
            "- Energy used by UAV B: 933.33447265625\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [0.19013427 0.2600819 ]\n",
            "- UAV B movement: [ 0.12508901 -0.16651022]\n",
            "- IoTD targeted: #1 (AoI: 1.0)\n",
            "\n",
            "Base reward from environment: 60.46329239630678\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : 54.4169631566761\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [  3. 277.   0.]\n",
            "- UAV B position (jammer): [255. 290. 200.]\n",
            "- AoI values (for 5 IoTDs): [12.  1. 12. 12. 12.]\n",
            "- Energy used by UAV A: 209.82896423339844\n",
            "- Energy used by UAV B: 184.53811645507812\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [ 0.14933126 -0.73915318]\n",
            "- UAV B movement: [-0.27830022 -0.04128373]\n",
            "- IoTD targeted: #3 (AoI: 12.0)\n",
            "\n",
            "Base reward from environment: 2.6950305641339467\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : 2.425527507720552\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [  5. 262.   0.]\n",
            "- UAV B position (jammer): [249. 289. 200.]\n",
            "- AoI values (for 5 IoTDs): [13.  2. 13.  1. 13.]\n",
            "- Energy used by UAV A: 744.9163208007812\n",
            "- Energy used by UAV B: 216.13336181640625\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [0.77156433 0.59973667]\n",
            "- UAV B movement: [ 0.19963848 -0.85993419]\n",
            "- IoTD targeted: #0 (AoI: 13.0)\n",
            "\n",
            "Base reward from environment: -115.62595318688314\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -104.06335786819483\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [ 20. 273.   0.]\n",
            "- UAV B position (jammer): [252. 271. 200.]\n",
            "- AoI values (for 5 IoTDs): [ 1.  3. 14.  2. 14.]\n",
            "- Energy used by UAV A: 1091.03173828125\n",
            "- Energy used by UAV B: 1052.227783203125\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [0.10744854 0.88574288]\n",
            "- UAV B movement: [ 0.63829661 -0.91740175]\n",
            "- IoTD targeted: #0 (AoI: 1.0)\n",
            "\n",
            "Base reward from environment: -150.5479723820517\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -135.49317514384654\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [ 22. 290.   0.]\n",
            "- UAV B position (jammer): [264. 252. 200.]\n",
            "- AoI values (for 5 IoTDs): [ 1.  4. 15.  3. 15.]\n",
            "- Energy used by UAV A: 933.33447265625\n",
            "- Energy used by UAV B: 1571.145263671875\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [ 0.50076266 -0.91272603]\n",
            "- UAV B movement: [ 0.40433202 -0.18510722]\n",
            "- IoTD targeted: #2 (AoI: 15.0)\n",
            "\n",
            "Base reward from environment: -77.46246075746944\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -69.7162146817225\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [ 32. 271.   0.]\n",
            "- UAV B position (jammer): [272. 248. 200.]\n",
            "- AoI values (for 5 IoTDs): [ 2.  5.  1.  4. 16.]\n",
            "- Energy used by UAV A: 1437.3448486328125\n",
            "- Energy used by UAV B: 322.2798156738281\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [0.91327417 0.07564052]\n",
            "- UAV B movement: [-0.29834594  0.41063057]\n",
            "- IoTD targeted: #4 (AoI: 16.0)\n",
            "\n",
            "Base reward from environment: -42.07965679519271\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -37.87169111567344\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [ 50. 272.   0.]\n",
            "- UAV B position (jammer): [266. 256. 200.]\n",
            "- AoI values (for 5 IoTDs): [3. 6. 2. 5. 1.]\n",
            "- Energy used by UAV A: 1028.38720703125\n",
            "- Energy used by UAV B: 376.4093933105469\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [0.99056655 0.71422415]\n",
            "- UAV B movement: [-0.06015498 -0.65711702]\n",
            "- IoTD targeted: #3 (AoI: 5.0)\n",
            "\n",
            "Base reward from environment: -139.55391819766302\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -125.59852637789672\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [ 69. 286.   0.]\n",
            "- UAV B position (jammer): [264. 242. 200.]\n",
            "- AoI values (for 5 IoTDs): [4. 7. 3. 1. 2.]\n",
            "- Energy used by UAV A: 1730.103271484375\n",
            "- Energy used by UAV B: 660.4358520507812\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [-0.98748347 -0.56404315]\n",
            "- UAV B movement: [ 0.86530095 -0.71783623]\n",
            "- IoTD targeted: #4 (AoI: 2.0)\n",
            "\n",
            "Base reward from environment: -229.08768475479854\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -206.17891627931868\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [ 49. 274.   0.]\n",
            "- UAV B position (jammer): [281. 227. 200.]\n",
            "- AoI values (for 5 IoTDs): [5. 8. 4. 2. 1.]\n",
            "- Energy used by UAV A: 1690.282470703125\n",
            "- Energy used by UAV B: 1598.5943603515625\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [ 0.76125487 -0.43274143]\n",
            "- UAV B movement: [0.92577198 0.92768148]\n",
            "- IoTD targeted: #0 (AoI: 5.0)\n",
            "\n",
            "Base reward from environment: -198.71762028548466\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -178.8458582569362\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [ 64. 265.   0.]\n",
            "- UAV B position (jammer): [299. 245. 200.]\n",
            "- AoI values (for 5 IoTDs): [1. 9. 5. 3. 2.]\n",
            "- Energy used by UAV A: 971.8881225585938\n",
            "- Energy used by UAV B: 2010.2880859375\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [-0.03188584  0.24361008]\n",
            "- UAV B movement: [-0.70443946  0.93113029]\n",
            "- IoTD targeted: #4 (AoI: 2.0)\n",
            "\n",
            "Base reward from environment: -88.78957799855196\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -79.91062019869676\n",
            "Prompt:\n",
            " Evaluate the following UAV mission decision with a score from 0 to 1 and a short comment.\n",
            "\n",
            "State:\n",
            "- UAV A position: [ 63. 269.   0.]\n",
            "- UAV B position (jammer): [284. 263. 200.]\n",
            "- AoI values (for 5 IoTDs): [ 2. 10.  6.  4.  1.]\n",
            "- Energy used by UAV A: 180.3039093017578\n",
            "- Energy used by UAV B: 1705.5919189453125\n",
            "\n",
            "Action taken:\n",
            "- UAV A movement: [0.73393711 0.62362199]\n",
            "- UAV B movement: [-0.4694696  -0.78742002]\n",
            "- IoTD targeted: #0 (AoI: 2.0)\n",
            "\n",
            "Base reward from environment: -219.40449531587888\n",
            "\n",
            "Respond in the format:\n",
            "Score: <value>\n",
            "Comment: <your reasoning>\n",
            "\n",
            "LLM Response:\n",
            " 1\n",
            "Reward After LLM : -197.464045784291\n",
            "Traceback (most recent call last):\n",
            "  File \"/content/Secure-Data-Collection-in-UAV-Assisted-IoT-via-Diffusion-Model-Enabled-Deep-Reinforcement-Learning/mainDM3.py\", line 223, in <module>\n",
            "    main()\n",
            "  File \"/content/Secure-Data-Collection-in-UAV-Assisted-IoT-via-Diffusion-Model-Enabled-Deep-Reinforcement-Learning/mainDM3.py\", line 180, in main\n",
            "    llm_score, llm_comment = examiner.evaluate(state, action, base_reward)\n",
            "                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/content/Secure-Data-Collection-in-UAV-Assisted-IoT-via-Diffusion-Model-Enabled-Deep-Reinforcement-Learning/llm_reward.py\", line 22, in evaluate\n",
            "    response = self.pipe(prompt, max_new_tokens=150, do_sample=False)[0]['generated_text']\n",
            "               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/transformers/pipelines/text2text_generation.py\", line 173, in __call__\n",
            "    result = super().__call__(*args, **kwargs)\n",
            "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/transformers/pipelines/base.py\", line 1379, in __call__\n",
            "    return self.run_single(inputs, preprocess_params, forward_params, postprocess_params)\n",
            "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/transformers/pipelines/base.py\", line 1386, in run_single\n",
            "    model_outputs = self.forward(model_inputs, **forward_params)\n",
            "                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/transformers/pipelines/base.py\", line 1286, in forward\n",
            "    model_outputs = self._forward(model_inputs, **forward_params)\n",
            "                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/transformers/pipelines/text2text_generation.py\", line 202, in _forward\n",
            "    output_ids = self.model.generate(**model_inputs, **generate_kwargs)\n",
            "                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/torch/utils/_contextlib.py\", line 116, in decorate_context\n",
            "    return func(*args, **kwargs)\n",
            "           ^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/transformers/generation/utils.py\", line 2280, in generate\n",
            "    model_kwargs = self._prepare_encoder_decoder_kwargs_for_generation(\n",
            "                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/transformers/generation/utils.py\", line 778, in _prepare_encoder_decoder_kwargs_for_generation\n",
            "    model_kwargs[\"encoder_outputs\"]: ModelOutput = encoder(**encoder_kwargs)  # type: ignore\n",
            "                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py\", line 1739, in _wrapped_call_impl\n",
            "    return self._call_impl(*args, **kwargs)\n",
            "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py\", line 1750, in _call_impl\n",
            "    return forward_call(*args, **kwargs)\n",
            "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/accelerate/hooks.py\", line 176, in new_forward\n",
            "    output = module._old_forward(*args, **kwargs)\n",
            "             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/transformers/models/t5/modeling_t5.py\", line 1131, in forward\n",
            "    layer_outputs = layer_module(\n",
            "                    ^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py\", line 1739, in _wrapped_call_impl\n",
            "    return self._call_impl(*args, **kwargs)\n",
            "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py\", line 1750, in _call_impl\n",
            "    return forward_call(*args, **kwargs)\n",
            "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/transformers/models/t5/modeling_t5.py\", line 732, in forward\n",
            "    hidden_states = self.layer[-1](hidden_states)\n",
            "                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py\", line 1739, in _wrapped_call_impl\n",
            "    return self._call_impl(*args, **kwargs)\n",
            "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py\", line 1750, in _call_impl\n",
            "    return forward_call(*args, **kwargs)\n",
            "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/transformers/models/t5/modeling_t5.py\", line 346, in forward\n",
            "    forwarded_states = self.DenseReluDense(forwarded_states)\n",
            "                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py\", line 1739, in _wrapped_call_impl\n",
            "    return self._call_impl(*args, **kwargs)\n",
            "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py\", line 1750, in _call_impl\n",
            "    return forward_call(*args, **kwargs)\n",
            "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/transformers/models/t5/modeling_t5.py\", line 314, in forward\n",
            "    hidden_gelu = self.act(self.wi_0(hidden_states))\n",
            "                           ^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py\", line 1739, in _wrapped_call_impl\n",
            "    return self._call_impl(*args, **kwargs)\n",
            "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/torch/nn/modules/module.py\", line 1750, in _call_impl\n",
            "    return forward_call(*args, **kwargs)\n",
            "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "  File \"/usr/local/lib/python3.11/dist-packages/torch/nn/modules/linear.py\", line 125, in forward\n",
            "    return F.linear(input, self.weight, self.bias)\n",
            "           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n",
            "KeyboardInterrupt\n"
          ]
        }
      ]
    }
  ]
}